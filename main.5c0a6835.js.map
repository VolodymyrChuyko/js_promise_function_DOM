{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","handleEvent","Promise","resolve","addEventListener","nodeName","id","printMessage","message","messageBlock","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAQjBC,OAPa,IAAIC,QAAQ,SAACC,GAC/BJ,OAAAA,EAAQK,iBAAiBJ,EAAW,WAClCG,OAAAA,EAAQ,UAAUH,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQM,SAC7CN,KAAAA,QAAAA,OAAAA,EAAQO,GADX,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,UAAUC,IAAI,WAC3BJ,EAAaK,YAAcN,EAC3BE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.5c0a6835.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const handleEvent = new Promise((resolve) => (\n    element.addEventListener(eventName, () => (\n      resolve(`It was ${eventName} on the element: ${element.nodeName},`\n      + ` id: ${element.id}.`)\n    ))\n  ));\n\n  return handleEvent;\n}\n\nconst printMessage = (message) => {\n  const messageBlock = document.createElement('div');\n\n  messageBlock.classList.add('message');\n  messageBlock.textContent = message;\n  document.body.append(messageBlock);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}